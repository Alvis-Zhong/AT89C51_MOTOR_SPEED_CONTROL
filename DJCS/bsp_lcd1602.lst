C51 COMPILER V9.54   BSP_LCD1602                                                           05/09/2017 20:50:14 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BSP_LCD1602
OBJECT MODULE PLACED IN ..\output\bsp_lcd1602.obj
COMPILER INVOKED BY: D:\KEIL5_C51\C51\BIN\C51.EXE ..\user\bsp_lcd\bsp_lcd1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\user\
                    -bsp_lcd;..\user\bsp_motor;..\user) DEBUG OBJECTEXTEND PRINT(..\bsp_lcd1602.lst) TABS(2) OBJECT(..\output\bsp_lcd1602.obj
                    -)

line level    source

   1          /*******************************************************************
   2            ************************************************************
   3            *
   4            *@file     bsp_lcd1602.c
   5            *@author   Bin
   6            *@data     2017.05
   7            *@brief    LCD1602的驱动文件
   8            *
   9            *************************************************************
  10          *********************************************************************/
  11          
  12          #include "bsp_lcd1602.h"
  13          
  14          sbit RS=P2^0; //LCD片选信号引脚位定义
  15          sbit RW=P2^1; //LCD读写信号引脚位定义
  16          sbit EN=P2^2; //LCD使能端引脚位定义
  17          
  18          /****************************************************************************************
  19            *@brief   软件延时函数，单位为ms
  20            *@param   形参ms用于设置延时的长短
  21            *@retvel  无
  22          *****************************************************************************************/
  23          void delayms(uint ms)
  24          {
  25   1        uchar i; 
  26   1        while(ms--)
  27   1        {
  28   2          for(i=0;i<120;i++); 
  29   2        }
  30   1      }
  31          
  32          /****************************************************************************************
  33            *@brief   LCD忙检测函数
  34            *@param   无
  35            *@retvel  返回LCD的状态值
  36          *****************************************************************************************/
  37          uchar busy_check()
  38          {
  39   1        uchar status; 
  40   1        RS=0;           //片选信号，低电平表示选择的是指令寄存器
  41   1        RW=1;           //读写信号，高电平表示进行读操作
  42   1        EN=1;           //使能信号，高电平使能
  43   1        delayms(1); 
  44   1        status=P0;      //读取P0口的状态，忙状态下，位BF为1，空闲状态，位BF为0，(位BF在8位寄存器的位7位)
  45   1        EN=0; 
  46   1        return status;  //返回状态值
  47   1      }
  48          
  49          /****************************************************************************************
  50            *@brief   LCD写命令函数
  51            *@param   传入的命令
  52            *@retvel  无
  53          *****************************************************************************************/
C51 COMPILER V9.54   BSP_LCD1602                                                           05/09/2017 20:50:14 PAGE 2   

  54          void write_command(uchar cmd)
  55          {
  56   1        while((busy_check()&0x80)==0x80);   //检测LCD是否处于空闲状态
  57   1        RS=0;                               //片选信号，低电平选择指令寄存器
  58   1        RW=0;                               //读写信号，低电平表示进行写操作
  59   1        EN=0;                               //先对LCD不使能
  60   1        P0=cmd;                             //送入要写入的命令
  61   1        EN=1;                               //对LCD使能
  62   1        delayms(1);                         //简单延时，让LCD读取命令
  63   1        EN=0;                               //完成一次命令的写操作，关闭使能
  64   1      }
  65          
  66          /****************************************************************************************
  67            *@brief   LCD写数据函数
  68            *@param   需要写入的数据
  69            *@retvel  无
  70          *****************************************************************************************/
  71          void write_data(uchar dat)
  72          {
  73   1        while((busy_check()&0x80)==0x80);  //检测LCD是否处于空闲状态
  74   1        RS=1;                              //片选信号，高电平选择数据寄存器
  75   1        RW=0;                              //读写信号，低电平表示进行写操作
  76   1        EN=0;                              //先对LCD不使能
  77   1        P0=dat;                            //送入要写入的数据
  78   1        EN=1 ;                             //对LCD使能
  79   1        delayms(1);                        //简单延时，让LCD读取数据
  80   1        EN=0;                              //完成一次数据的写操作，关闭使能
  81   1      }
  82          
  83          /****************************************************************************************
  84            *@brief   LCD初始化函数
  85            *@param   无
  86            *@retvel  无
  87          *****************************************************************************************/
  88          void lcd_init()
  89          {
  90   1        write_command(0x38);    //开显示
  91   1        delayms(1);            
  92   1        write_command(0x01);    //清屏
  93   1        delayms(1);             
  94   1        write_command(0x06);    //写一个字符指针加一
  95   1        delayms(1); 
  96   1        write_command(0x0c);    //开显示不显示光标
  97   1        delayms(1); 
  98   1      } 
  99          
 100          /****************************************************************************************
 101            *@brief   显示函数，该工程里面用于显示电机转速
 102            *@param   x表示在第几列开始显示，y表示在第几行开始显示，str是指向字符型的指针
 103            *@retvel  无
 104          *****************************************************************************************/
 105          void display(uchar x ,uchar y , uchar * str)
 106          {
 107   1        uchar i=0;
 108   1        if(y==0)
 109   1          write_command(0x80|x);                //y=0，第一行显示
 110   1        if(y==1)
 111   1          write_command(0xc0|x);                //y=1，第二行显示
 112   1        for(i=0;i<16;i++)
 113   1        {
 114   2            write_data(str[i]);                 //向LCD写入需要显示的数组值
 115   2        }
C51 COMPILER V9.54   BSP_LCD1602                                                           05/09/2017 20:50:14 PAGE 3   

 116   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
